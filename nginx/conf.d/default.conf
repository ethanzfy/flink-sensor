server {
    listen 80;
    listen [::]:80;
    server_name sensor.example.com;
    
    # HTTP重定向到HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name sensor.example.com;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    
    # SSL配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # HSTS (HTTP严格传输安全)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 其他安全头
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # API访问代理
    location /api/ {
        proxy_pass http://app:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 缓存设置
        proxy_cache off;
        proxy_buffering off;
        
        # WebSocket不适用于普通API
        proxy_http_version 1.1;
    }
    
    # WebSocket代理配置
    location /wx-socket {
        proxy_pass http://app:8080/wx-socket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket特有设置
        proxy_read_timeout 300s;     # 保持连接超时
        proxy_send_timeout 300s;
        proxy_buffering off;         # 关闭缓冲
        proxy_cache off;             # 关闭缓存
        
        # 禁用压缩（WebSocket已有自己的压缩机制）
        proxy_set_header Accept-Encoding "";
    }
    
    # 健康检查路由
    location /health {
        proxy_pass http://app:8080/actuator/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # 限制访问频率
        limit_req zone=health burst=5;
    }
    
    # 静态资源（如果有的话）
    location /static/ {
        proxy_pass http://app:8080/static/;
        proxy_set_header Host $host;
        
        # 静态资源缓存
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }
    
    # 拒绝访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# 限制请求率
limit_req_zone $binary_remote_addr zone=health:10m rate=10r/s; 